
:root {
    --red: #f44;
    --green: #2b2;
    --blue: #66f;

    --material-shadow: 1px 1px 2px #0003,
                       0 0 3px #0003;
    --material-selected-shadow: 2px 2px 4px #0003,
                                0 0 6px #0003;
}

* {
    box-sizing: border-box;
    transition-property: color, background, opacity, border, box-shadow, transform;
    transition-duration: .15s;
    user-select: none;
}
html, body {
    margin: 0;
    padding: 0;
    position: absolute;
    width: 100%;
    height: 100%;
    font-size: 1.2vmax;

    text-align: center;

    background: #e8e8ee url('wood.png') repeat;
    font-family: sans-serif;
    color: #666;
    font-weight: bold;
}
body {
    display: grid;
    grid-template-columns: [left sidebar] 16em [sidebar-end main] 1fr [main-end right];
    grid-template-rows:
        [top title] max-content
        [title-end players] 1fr
        [players-end info] max-content
        [info-end bottom];
    grid-column-gap: 1em;
    padding: 1em;
    align-items: stretch;
}
h1 {
    grid-area: title / sidebar / title-end / sidebar-end;
}
#players {
    grid-area: players / sidebar / players-end / sidebar-end;
}
#info {
    grid-area: info / sidebar / info-end / sidebar-end;
}
#cards {
    grid-area: top / main / bottom / main-end;
}
@media (orientation: portrait) {
    body {
        display: flex;
        flex-direction: column;
    }
    #cards {
        flex-grow: 1;
    }
    body .button {
        line-height: 3em;
    }
}

.svg-defs {
    position: fixed;
    height: 0;
    width: 0;
}
.shape { stroke-width: 2; }
.shape-red { stroke: var(--red); fill: var(--red); }
.shape-green { stroke: var(--green); fill: var(--green); }
.shape-blue { stroke: var(--blue); fill: var(--blue); }
.shape-empty { fill: none; }
/*.shape-half { fill-opacity: .2; }*/
.shape-half.shape-red { fill: url(#pattern-diagonal-hatch-red); }
.shape-half.shape-green { fill: url(#pattern-diagonal-hatch-green); }
.shape-half.shape-blue { fill: url(#pattern-diagonal-hatch-blue); }
#pattern-diagonal-hatch-red { stroke: var(--red); }
#pattern-diagonal-hatch-green { stroke: var(--green); }
#pattern-diagonal-hatch-blue { stroke: var(--blue); }

button {
    border: none;
    outline: none;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
}
.button {
    padding: 1em;
    line-height: 2em;
    margin: 1em 0;
    background: white;
    box-shadow: var(--material-shadow);
    cursor: pointer;
}
.button.selected {
    box-shadow: var(--material-selected-shadow);
    /*transform: scale(104%, 104%);*/
}
.button:not(.disabled):hover,
.button.selected {
    background: #ddf;
    color: #448;
}
.button.disabled {
    color: #aaa;
    opacity: .5;
    cursor: default;
    pointer-events: none;
}

.player {
    display: flex;
    justify-content: space-between;
}
.player-name {
    margin-right: .5em;
}

#cards {
    overflow: hidden;
    display: grid;
    place-content: center;
    padding: 1%;
}
#cards.game-preparation {
    grid-template-rows: auto auto;
    grid-template-columns: auto auto auto;
}
.game-preparation .card {
    cursor: default;
    pointer-events: none;
}
.game-preparation .card:first-of-type {
    transform: rotate(-15deg) translate(10%, 10%);
}
.game-preparation .card:last-of-type {
    transform: rotate(15deg) translate(-10%, 10%);
}
.game-preparation #start-button {
    grid-area: 2 / 1 / 3 / 4;
    font-size: 2em;
}
#cards.game-started {
    grid-auto-flow: column;
    grid-template-rows: auto auto auto;
    grid-auto-columns: auto;
    place-content: center;
    grid-gap: 1%;
}
.card {
    --card-inner-shadow: inset 0 0 4vmin;
    margin: 0;
    padding: 10%;

    position: relative;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    border: 1px solid transparent;
    border-radius: 0.5vmin;
    box-shadow: var(--material-shadow),
                var(--card-inner-shadow) #eee;
}
.card-red.button.selected,
.card-red.button:hover {
    background: #fee;
}
.card-green.button.selected,
.card-green.button:hover {
    background: #efe;
}
.card-blue.button.selected,
.card-blue.button:hover {
    background: #eef;
}
.card::before {
    content: "";
    position: absolute;
    font-size: 3vmin;
    top: .2em;
    right: .2em;
    width: 1.1em;
    height: 1.1em;
    line-height: 1.1em;
    border-radius: .15em;
    transition: background .2s;
    color: white;
}
.card.selected::before {
    content: "âœ”";
}
.card-red.selected::before { background: #f99; }
.card-green.selected::before { background: #6d6; }
.card-blue.selected::before { background: #aaf; }

.card svg {
    width: 100%;
    height: 31%;
}
